# Dockerfile.prod

# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Set Node.js memory limits
ENV NODE_OPTIONS="--max-old-space-size=1024"

# Install nice command
RUN apk add --no-cache util-linux

# Install dependencies
COPY package.json yarn.lock ./
RUN nice -n 10 yarn install --frozen-lockfile

# Copy only necessary files for build
COPY src/ ./src/
COPY public/ ./public/
COPY next.config.ts ./
COPY tsconfig.json ./
COPY postcss.config.mjs ./
COPY eslint.config.mjs ./
COPY database/schema ./database/schema
COPY .env* ./

# Create generated directory and generate Prisma client
RUN mkdir -p database/schema/generated/client
RUN nice -n 10 yarn prisma generate

# Build Next.js app with increased memory limit
RUN nice -n 10 yarn next build

# -----------------------------

# Production stage
FROM node:18-alpine

WORKDIR /app

# Copy only necessary files from builder
COPY --from=builder /app/package.json /app/yarn.lock ./
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/database/schema/generated ./database/schema/generated

ENV NODE_ENV=production
ENV PORT=3000

EXPOSE 3000

# Start the app
CMD ["yarn", "next", "start"]
